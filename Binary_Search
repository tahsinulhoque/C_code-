#include <stdio.h>
#include <stdlib.h>

int linear_search(int arr[], int size, int target, int *comparisons) {
    for (int i = 0; i < size; i++) {
        (*comparisons)++;
        if (arr[i] == target) {
            return i + 1;
        }
    }
    return -1;
}

int binary_search(int arr[], int size, int target, int *comparisons) {
    int low = 0, high = size - 1;
    while (low <= high) {
        (*comparisons)++;
        int mid = (low + high) / 2;
        if (arr[mid] == target) {
            return mid + 1;
        } else if (arr[mid] < target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return -1;
}

int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int main() {
    int n, x;
    scanf("%d %d", &n, &x);
    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    int linear_comparisons = 0;
    int linear_index = linear_search(arr, n, x, &linear_comparisons);

    // Sort array for binary search
    qsort(arr, n, sizeof(int), compare);

    int binary_comparisons = 0;
    int binary_index = binary_search(arr, n, x, &binary_comparisons);

    printf("%d %d\n", linear_comparisons, binary_comparisons);
    return 0;
}
